Q.1 Create a structure Student ( rollno, name), Create a structure variable and Access the members using structure variable.

Ans:
     #include<stdio.h>
     #include<string.h>
struct students
{
	char name[10];
	int rollno;
};
int main()
{
	struct students s1,s2;
	strcpy(s1.name,"Ajay");
	strcpy(s2.name,"Vijay");
	s1.rollno=10;
	s2.rollno=20;
	printf("Name %s ,Rollno. %d\n",s1.name,s1.rollno);
	printf("Name %s ,Rollno. %d",s2.name,s2.rollno);
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q.2 Create a structure pointer which can access the members of the structure Student and print member values.

Ans:
    #include<stdio.h>
    #include<string.h>
    struct Student
    {
       int rollono;
       char name[10];
    };
    int main()
    {
       struct Student *s1,s;
       s1=&s;
       strcpy(s1->name,"Ajay");
       s1->rollno=10;
       printf("Name :%s , Rollno: %d",s1->name,s1->rollno);
    }

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q.3 Create an array of structure which is used to store 3 employee records.

Ans :#include<stdio.h>
#include<string.h>

typedef struct Employees
{    	                   
	char name[20];
	int age,cont;
	
}employee;

int main()
{
	employee emp[3];
	char nm[20];
	
	int i;
	for(i=0;i<3;i++)
	{
		printf("Person %d Details :\n",i+1);
		printf("Name : ");
		gets(nm);
		strcpy(emp[i].name,nm);
		fflush(stdin); 
		printf("Age : ");
		scanf("%d",&emp[i].age);
		printf("Cont.No.:");
		scanf("%d",&emp[i].cont);
	    fflush(stdin);
	}	
    printf("\n");
	for(i=0;i<3;i++)
	{
		printf("Name : %s\tage : %d\tcont.No.: %d \n",emp[i].name,emp[i].age,emp[i].cont);
	}	
}
-------------------------------------------------------------------------------------------------------------------
Q.4 Create a float pointer which points to the float array and access all elements of array using float pointer.

Ans:
    #include<stdio.h>

int main()
{
	float a[3];
	float *s;
	s=a;
	int i;
	for(i=0;i<3;i++)
	{
		printf("Enter Float value :");
		scanf("%f",&s[i]);
	}
	for(i=0;i<3;i++)
	{
		printf("%f\t",s[i]);
	}
	
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q.5 Create an integer pointer for which memroy is allocated dynamically.

Ans:
    #include<stdio.h>
    #include<stdlib.h>
int main()
{
	int *p = (int*) malloc(3*sizeof(int)); 
	
	int i;

	for(i=0;i<3;i++)
	{
		printf("Enter Value :");
		scanf("%d",&p[i]);
	}
	
	for(i=0;i<3;i++) 
	{
		printf("%d\t",p[i]);
	}
	free(p);
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q.6 Create a stack of 5 characters and display all elements.
Ans:
     #include<stdio.h>
     #include<stdlib.h>
     #define SIZE 6

typedef struct st
{
	int top;
	char elements[SIZE];	
}stack;


void initialize(stack *sp)
{
	sp->top=-1;
}

void push(stack *sp,int item)
{
		if(is_full(sp))	
			printf("\nStack overflow\n");
		else
			sp->elements[++sp->top]=item;
}

int pop(stack *sp)
{
	int x;
	if(is_empty(sp))
		printf("\nStack underflow");
	else
		x=sp->elements[sp->top--];
	return x;	
}

int is_full(stack *sp)   
{
	if(sp->top == SIZE-1)      
		return 1;
	else
		return 0;
}

int is_empty(stack *sp)   
{
	if(sp->top == -1)          
		return 1;
	else
		return 0;	
}

int main()
{
	stack s1;

	push(&s1,'H');
	push(&s1,'e');
	push(&s1,'l');
	push(&s1,'l');
	push(&s1,'o');
	int i;
	
	for(i=s1.top;i!=-1;i--)
	{
		printf("%c ",s1.elements[i]);	
	}	
	printf("\nthis is the end of the Code");
	
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q.7 Create a stack of 5 names of employees and delete the last name and display it.
Ans:
    #include<stdio.h>
    #include<stdlib.h>
    #define SIZE 6

typedef struct st
{
	int top;
	char name[SIZE];	
}stack;


void initialize(stack *sp)
{
	sp->top=-1;
}

void push(stack *sp,char item[10])
{
		if(is_full(sp))	
			printf("\nStack overflow\n");
		else
			sp->name[++sp->top]=item;
}

int pop(stack *sp)
{
	int x;
	if(is_empty(sp))
		printf("\nStack underflow");
	else
		x=sp->name[sp->top--];
	return x;	
}

int is_full(stack *sp)   
{
	if(sp->top == SIZE-1)      
		return 1;
	else
		return 0;
}

int is_empty(stack *sp)   
{
	if(sp->top == -1)          
		return 1;
	else
		return 0;	
}

int main()
{
	stack s1;

	push(&s1,"Ajay");
	push(&s1,"Vijay");
	push(&s1,"Digvijay");
	push(&s1,"jaya");
	push(&s1,"jay");
	printf("Befor POP\n");
	int i;
	for(i=s1.top;i!=-1;i--)
	{
		printf("%s ",s1.name[i]);	
	}	
	pop(&s1);
	pop(&s1);
	pop(&s1);
	printf("After POP\n");

	for(i=s1.top;i!=-1;i--)
	{
		printf("%s ",s1.name[i]);	
	}	
	printf("\nthis is the end of the Code");	
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



